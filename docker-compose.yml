version: '3.8'

services:
  loadbalancer:
    image: nginx:stable-alpine
    container_name: loadbalancer
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend:/usr/share/nginx/html:ro
    depends_on:
      - core-service
      - math-service
    networks:
      - backend

  core-service:
    build:
      context: .
      dockerfile: Dockerfile.core
    container_name: core-service
    networks:
      - backend

  math-service:
    build:
      context: .
      dockerfile: Dockerfile.math
    container_name: math-service
    networks:
      - backend

  storage-service:
    build:
      context: .
      dockerfile: Dockerfile.storage
    container_name: storage-service
    environment:
      - DB_ADDR=database:5432
      - DB_USER=${DB_USERNAME}
      - DB_PASS=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    depends_on:
      - database
    networks:
      - backend
      - db

  database:
    container_name: database
    image: postgres:17.4-alpine3.21
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - 127.0.0.1:8888:5432
    volumes:
      - database-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $DB_USERNAME -d $DB_NAME"]
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 20s
    restart: unless-stopped
    networks:
      - db

  migrations:
    container_name: migrations
    image: migrate/migrate
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://$DB_USERNAME:$DB_PASSWORD@database:5432/$DB_NAME?sslmode=disable",
        "up"
      ]
    networks:
      - db
    
volumes:
  database-data:

networks:
  backend:
    driver: bridge
  db:
    driver: bridge